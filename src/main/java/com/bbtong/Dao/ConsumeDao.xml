<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbtong.Dao.ConsumeDao">
  <resultMap id="BaseResultMap" type="com.bbtong.Pojo.Consume">
    <id column="Consume_Id" jdbcType="INTEGER" property="consumeId" />
    <result column="User_id" jdbcType="INTEGER" property="userId" />
    <result column="Consume_number" jdbcType="VARCHAR" property="consumeNumber" />
    <result column="Consume_State" jdbcType="CHAR" property="consumeState" />
    <result column="User_Number" jdbcType="VARCHAR" property="userNumber" />
    <result column="Consume_Time" jdbcType="VARCHAR" property="consumeTime" />
    <result column="NewConsume_Time" jdbcType="VARCHAR" property="newconsumeTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Consume_Id, User_id, Consume_number, Consume_State, User_Number, Consume_Time, NewConsume_Time
  </sql>
  <select id="selectByExample" parameterType="com.bbtong.Pojo.ConsumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bbt_consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bbt_consume
    where Consume_Id = #{consumeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bbt_consume
    where Consume_Id = #{consumeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bbtong.Pojo.ConsumeExample">
    delete from bbt_consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="Consume_Id" keyProperty="consumeId" parameterType="com.bbtong.Pojo.Consume" useGeneratedKeys="true">
    insert into bbt_consume (User_id, Consume_number, Consume_State, 
      User_Number, Consume_Time, NewConsume_Time
      )
    values (#{userId,jdbcType=INTEGER}, #{consumeNumber,jdbcType=VARCHAR}, #{consumeState,jdbcType=CHAR}, 
      #{userNumber,jdbcType=VARCHAR}, #{consumeTime,jdbcType=VARCHAR}, #{newconsumeTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="Consume_Id" keyProperty="consumeId" parameterType="com.bbtong.Pojo.Consume" useGeneratedKeys="true">
    insert into bbt_consume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        User_id,
      </if>
      <if test="consumeNumber != null">
        Consume_number,
      </if>
      <if test="consumeState != null">
        Consume_State,
      </if>
      <if test="userNumber != null">
        User_Number,
      </if>
      <if test="consumeTime != null">
        Consume_Time,
      </if>
      <if test="newconsumeTime != null">
        NewConsume_Time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="consumeNumber != null">
        #{consumeNumber,jdbcType=VARCHAR},
      </if>
      <if test="consumeState != null">
        #{consumeState,jdbcType=CHAR},
      </if>
      <if test="userNumber != null">
        #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="consumeTime != null">
        #{consumeTime,jdbcType=VARCHAR},
      </if>
      <if test="newconsumeTime != null">
        #{newconsumeTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bbtong.Pojo.ConsumeExample" resultType="java.lang.Long">
    select count(*) from bbt_consume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bbt_consume
    <set>
      <if test="record.consumeId != null">
        Consume_Id = #{record.consumeId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        User_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.consumeNumber != null">
        Consume_number = #{record.consumeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeState != null">
        Consume_State = #{record.consumeState,jdbcType=CHAR},
      </if>
      <if test="record.userNumber != null">
        User_Number = #{record.userNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.consumeTime != null">
        Consume_Time = #{record.consumeTime,jdbcType=VARCHAR},
      </if>
      <if test="record.newconsumeTime != null">
        NewConsume_Time = #{record.newconsumeTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bbt_consume
    set Consume_Id = #{record.consumeId,jdbcType=INTEGER},
      User_id = #{record.userId,jdbcType=INTEGER},
      Consume_number = #{record.consumeNumber,jdbcType=VARCHAR},
      Consume_State = #{record.consumeState,jdbcType=CHAR},
      User_Number = #{record.userNumber,jdbcType=VARCHAR},
      Consume_Time = #{record.consumeTime,jdbcType=VARCHAR},
      NewConsume_Time = #{record.newconsumeTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbtong.Pojo.Consume">
    update bbt_consume
    <set>
      <if test="userId != null">
        User_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="consumeNumber != null">
        Consume_number = #{consumeNumber,jdbcType=VARCHAR},
      </if>
      <if test="consumeState != null">
        Consume_State = #{consumeState,jdbcType=CHAR},
      </if>
      <if test="userNumber != null">
        User_Number = #{userNumber,jdbcType=VARCHAR},
      </if>
      <if test="consumeTime != null">
        Consume_Time = #{consumeTime,jdbcType=VARCHAR},
      </if>
      <if test="newconsumeTime != null">
        NewConsume_Time = #{newconsumeTime,jdbcType=VARCHAR},
      </if>
    </set>
    where Consume_Id = #{consumeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbtong.Pojo.Consume">
    update bbt_consume
    set User_id = #{userId,jdbcType=INTEGER},
      Consume_number = #{consumeNumber,jdbcType=VARCHAR},
      Consume_State = #{consumeState,jdbcType=CHAR},
      User_Number = #{userNumber,jdbcType=VARCHAR},
      Consume_Time = #{consumeTime,jdbcType=VARCHAR},
      NewConsume_Time = #{newconsumeTime,jdbcType=VARCHAR}
    where Consume_Id = #{consumeId,jdbcType=INTEGER}
  </update>

  <!--先根据ID查询对应的代理编号-->
  <select id="User_Number" parameterType="int" resultType="string">
    SELECT User_Number FROM bbt_user WHERE User_Id=#{userId}
  </select>

  <!--用户提交大家保险的单号来申请消费卡-->
  <insert id="Submit"  parameterType="Consume">
    insert into bbt_consume(User_id, Consume_number,User_Number, Consume_Time)values(#{userId},#{consumeNumber},#{userNumber},#{consumeTime})
  </insert>

  <!--查询当前用户，查询的数据有多少条-->
  <select id="QueryNumber" parameterType="map" resultType="int">
        select count(1) from bbt_consume where User_id=#{userId} and Consume_State=#{consumeState}
  </select>

  <!--查询对应用户，为审核的和豆申请订单-->
  <select id="Query" parameterType="map" resultMap="BaseResultMap">
        select * from bbt_consume where User_id=#{userId} and Consume_State=#{consumeState} limit 0,#{end}
  </select>

  <!--管理员查看对应数据的条数-->
  <select id="SelectQueryNumber" parameterType="map" resultType="int">
    select count(1) from bbt_consume where Consume_State=#{consumeState}
  </select>

  <!--管理员查询，对应的信息来显示对应的数据-->
  <select id="SelectQuery" parameterType="map" resultMap="BaseResultMap">
    select * from  bbt_consume where Consume_State=#{consumeState} order by Consume_Time limit #{state},#{end}
  </select>
</mapper>