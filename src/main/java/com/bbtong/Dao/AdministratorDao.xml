<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbtong.Dao.AdministratorDao">
    <resultMap id="BaseResultMap" type="com.bbtong.Pojo.User">
        <id column="User_Id" jdbcType="INTEGER" property="userId"/>
        <result column="User_Name" jdbcType="VARCHAR" property="userName"/>
        <result column="User_Nickname" jdbcType="VARCHAR" property="userNickname"/>
        <result column="Insurance_Company_Name" jdbcType="VARCHAR" property="insuranceCompanyName"/>
        <result column="Insurance_Company_Id" jdbcType="INTEGER" property="insuranceCompanyId"/>
        <result column="User_Integrity" jdbcType="DOUBLE" property="userIntegrity"/>
        <result column="User_Member_State" jdbcType="INTEGER" property="userMemberState"/>
        <result column="User_ Member_Begin" jdbcType="VARCHAR" property="userMemberBegin"/>
        <result column="User_ Member_Finish" jdbcType="VARCHAR" property="userMemberFinish"/>
        <result column="User_Phone" jdbcType="VARCHAR" property="userPhone"/>
        <result column="User_Identity_Card" jdbcType="VARCHAR" property="userIdentityCard"/>
        <result column="User_Identity_Card_Front" jdbcType="VARCHAR" property="userIdentityCardFront"/>
        <result column="User_Identity_Card_Verso" jdbcType="VARCHAR" property="userIdentityCardVerso"/>
        <result column="User_Satisfaction" jdbcType="INTEGER" property="userSatisfaction"/>
        <result column="User_OpenId" jdbcType="VARCHAR" property="userOpenid"/>
        <result column="User_State" jdbcType="INTEGER" property="userState"/>
        <result column="User_Entrust_number" jdbcType="INTEGER" property="userEntrustNumber"/>
        <result column="User_Order_numer" jdbcType="INTEGER" property="userOrderNumer"/>
        <result column="User_Entrust_Money" jdbcType="DOUBLE" property="userEntrustMoney"/>
        <result column="User_order_Money" jdbcType="DOUBLE" property="userOrderMoney"/>
        <result column="User_Number" jdbcType="VARCHAR" property="userNumber"/>
        <result column="User_Pact" jdbcType="INTEGER" property="userPact"/>
        <result column="User_Order_State" jdbcType="INTEGER" property="userOrderState"/>
        <result column="User_tietong" jdbcType="INTEGER" property="userTietong"/>
        <result column="User_Address" jdbcType="VARCHAR" property="userAddress"/>
        <result column="Tietong_Number" jdbcType="VARCHAR" property="tietongNumber"/>
        <result column="Intention_State" jdbcType="INTEGER" property="intentionState"/>
        <result column="test_state" jdbcType="INTEGER" property="testState"/>
        <result column="User_Time" jdbcType="VARCHAR" property="userTime"/>
    </resultMap>

    <!--管理员  查询委托对应的信息的映射-->
    <resultMap id="BaseParticularsEntrust" type="com.bbtong.Base.ParticularsEntrust">
        <id column="User_Id" jdbcType="INTEGER" property="userId"/>
        <id column="Entrust_Id" jdbcType="INTEGER" property="entrustId"/>
        <result column="New_User_Id" jdbcType="VARCHAR" property="newUserId"/>
        <result column="Finally_User_Id" jdbcType="INTEGER" property="finallyUserId"/>
        <result column="license_Plate_Number" jdbcType="VARCHAR" property="licensePlateNumber"/>
        <result column="Entrust_Car_Brand" jdbcType="VARCHAR" property="entrustCarBrand"/>
        <result column="Entrust_Address" jdbcType="VARCHAR" property="entrustAddress"/>
        <result column="Entrust_Remark" jdbcType="VARCHAR" property="entrustRemark"/>
        <result column="Entrust_Start_Time" jdbcType="VARCHAR" property="entrustStartTime"/>
        <result column="Entrust_State" jdbcType="INTEGER" property="entrustState"/>
        <result column="Entrust_Insure" jdbcType="VARCHAR" property="entrustInsure"/>
        <result column="Entrust_Service_Charge" jdbcType="DOUBLE" property="entrustServiceCharge"/>
        <result column="Entrust_Money" jdbcType="DOUBLE" property="entrustMoney"/>
        <result column="Entrust_Return_Money" jdbcType="DOUBLE" property="entrustReturnMoney"/>
        <result column="Entrust_Return_Time" jdbcType="INTEGER" property="entrustReturnTime"/>
        <result column="User_Name" jdbcType="VARCHAR" property="userName"/>
        <result column="Insurance_Company_Name" jdbcType="VARCHAR" property="insuranceCompanyName"/>
        <result column="new_Insurance_Company_Name" jdbcType="VARCHAR" property="newInsuranceCompanyName"/>
    </resultMap>

    <!--管理员查看所有用户实体类的依赖-->
    <resultMap id="BaseAdminUser" type="com.bbtong.Base.AdminUser">
        <result column="User_Name" jdbcType="VARCHAR" property="userName"/>
        <result column="Insurance_Company_Id" jdbcType="INTEGER" property="insuranceCompanyId"/>
        <result column="User_Time" jdbcType="VARCHAR" property="startTime"/>
        <result column="User_Time" jdbcType="VARCHAR" property="endTime"/>
        <result column="User_Phone" jdbcType="VARCHAR" property="userPhone"/>
    </resultMap>

    <!--管理员消息的映射-->
    <resultMap id="BaseAdminMessage" type="com.bbtong.Pojo.AdminMessage">
        <id column="admin_Message_Id" jdbcType="INTEGER" property="adminMessageId"/>
        <result column="user_Id" jdbcType="INTEGER" property="userId"/>
        <result column="admin_Message_Time" jdbcType="VARCHAR" property="adminMessageTime"/>
        <result column="admin_Message_Remark" jdbcType="VARCHAR" property="adminMessageRemark"/>
        <result column="admin_Id" jdbcType="INTEGER" property="adminId"/>
    </resultMap>

    <!--管理员数据的映射-->
    <resultMap id="BaseAdmin" type="com.bbtong.Pojo.Admin">
        <id column="admin_Id" jdbcType="INTEGER" property="adminId"/>
        <result column="admin_Name" jdbcType="VARCHAR" property="adminName"/>
        <result column="admin_Phone" jdbcType="VARCHAR" property="adminPhone"/>
        <result column="admin_Account" jdbcType="VARCHAR" property="adminAccount"/>
        <result column="admin_Password" jdbcType="VARCHAR" property="adminPassword"/>
        <result column="admin_Role_Id" jdbcType="INTEGER" property="adminRoleId"/>
        <result column="admin_Role_Name" jdbcType="VARCHAR" property="adminRoleName"/>
        <result column="admin_State" jdbcType="INTEGER" property="adminState"/>
    </resultMap>

    <!--管理员查询返回用户的对应信息-->
    <resultMap id="BaseAdminCheckUser" type="com.bbtong.Base.AdminCheckUser">
        <result column="User_Id" jdbcType="INTEGER" property="userId"/>
        <result column="User_Name" jdbcType="VARCHAR" property="userName"/>
        <result column="Insurance_Company_Name" jdbcType="INTEGER" property="insuranceCompanyName"/>
        <result column="User_Phone" jdbcType="VARCHAR" property="userPhone"/>
        <result column="User_Time" jdbcType="VARCHAR" property="userTime"/>
    </resultMap>

    <!--注册的时候 管理员 查询对应用户个人信息的方法的映射-->
    <resultMap id="BaseLoginUser" type="com.bbtong.Base.LoginUser">
        <result column="User_Id" jdbcType="INTEGER" property="userId"/>
        <result column="User_Name" jdbcType="VARCHAR" property="userName"/>
        <result column="User_Phone" jdbcType="VARCHAR" property="userPhone"/>
        <result column="Insurance_Company_Name" jdbcType="INTEGER" property="insuranceCompanyName"/>
        <result column="User_Identity_Card" jdbcType="VARCHAR" property="userIdentityCard"/>
        <result column="User_State" jdbcType="INTEGER" property="userState"/>
        <result column="User_Number" jdbcType="VARCHAR" property="userNumber"/>
        <result column="User_Address" jdbcType="VARCHAR" property="userAddress"/>
        <result column="test_state" jdbcType="INTEGER" property="testState"/>
    </resultMap>

    <!--管理员 查询对应委托数据的映射-->
    <resultMap id="BaseAdminEntrust" type="com.bbtong.Base.AdminEntrust">
        <id column="Entrust_Id" jdbcType="INTEGER" property="entrustId"/>
        <result column="User_Id" jdbcType="INTEGER" property="userId"/>
        <result column="User_Name" jdbcType="VARCHAR" property="userName"/>
        <result column="User_Phone" jdbcType="VARCHAR" property="userPhone"/>
        <result column="Insurance_Company_Id" jdbcType="INTEGER" property="insuranceCompanyId"/>
        <result column="license_Plate_Number" jdbcType="VARCHAR" property="licensePlateNumber"/>
        <result column="Entrust_Start_Time" jdbcType="VARCHAR" property="entrustStartTime"/>
        <result column="Entrust_Money" jdbcType="DOUBLE" property="entrustMoney"/>
        <result column="Insurance_Company_Name" jdbcType="VARCHAR" property="insuranceCompanyName"/>
    </resultMap>

    <!--查询所有管理权限的信息-->
    <resultMap id="BaseAdminRelo" type="com.bbtong.Pojo.AdminRole">
        <id column="admin_Role_Id" jdbcType="INTEGER" property="adminRoleId"/>
        <result column="admin_Role_Name" jdbcType="VARCHAR" property="adminRoleName"/>
    </resultMap>

    <!--查询对应消费卡的映射-->
    <resultMap id="BaseAllConsume" type="com.bbtong.Base.AllConsume">
        <id column="Consume_Id" jdbcType="INTEGER" property="consumeId"/>
        <result column="User_id" jdbcType="INTEGER" property="userId"/>
        <result column="User_Name" jdbcType="VARCHAR" property="userName"/>
        <result column="Consume_number" jdbcType="VARCHAR" property="consumeNumber"/>
        <result column="Consume_State" jdbcType="CHAR" property="consumeState"/>
        <result column="User_Number" jdbcType="VARCHAR" property="userNumber"/>
        <result column="Consume_Time" jdbcType="VARCHAR" property="consumeTime"/>
        <result column="NewConsume_Time" jdbcType="VARCHAR" property="newconsumeTime"/>
        <result column="admin_Name" jdbcType="VARCHAR" property="adminName"/>
    </resultMap>

    <!--查询对应的和豆申请的记录的映射-->
    <resultMap id="BaseResultMap" type="com.bbtong.Pojo.Beans">
        <id column="Beans_Id" jdbcType="INTEGER" property="beansId"/>
        <result column="User_id" jdbcType="INTEGER" property="userId"/>
        <result column="User_Name" jdbcType="VARCHAR" property="userName"/>
        <result column="Card_Number" jdbcType="VARCHAR" property="cardNumber"/>
        <result column="Beans_State" jdbcType="CHAR" property="beansState"/>
        <result column="User_Number" jdbcType="VARCHAR" property="userNumber"/>
        <result column="Beans_Time" jdbcType="VARCHAR" property="beansTime"/>
        <result column="NewBeans_Time" jdbcType="VARCHAR" property="newbeansTime"/>
        <result column="admin_Name" jdbcType="VARCHAR" property="adminName"/>
    </resultMap>

    <!--第一步 查询数据对应的条数-->
    <select id="getAllUserNumber" parameterType="map" resultType="int">
        select count(1) from bbt_user
        <where>
            <if test="userName != null and userName !=''">
                and userName like concat('%',#{userName},'%')
            </if>
            <if test="insuranceCompanyId != null and insuranceCompanyId !=''">
                and insuranceCompanyId=#{insuranceCompanyId}
            </if>
            <if test="startTime != null and startTime !=''">
                and User_Time>=#{startTime}
            </if>
            <if test="endTime != null and endTime !=''">
                and #{endTime}>=User_Time
            </if>
            <if test="userPhone != null and userPhone !=''">
                and User_Phone=#{userPhone}
            </if>
        </where>
    </select>

    <!--第二步 根据筛选的条件 查询对应的用户信息-->
    <select id="getAllUser" parameterType="adminUser" resultMap="BaseResultMap">
        select * from bbt_user
        <where>
            <if test="userName != null and userName !=''">
                and userName like concat('%',#{userName},'%')
            </if>
            <if test="insuranceCompanyId != null and insuranceCompanyId !=''">
                and insuranceCompanyId=#{insuranceCompanyId}
            </if>
            <if test="startTime != null and startTime !=''">
                and User_Time>=#{startTime}
            </if>
            <if test="endTime != null and endTime !=''">
                and #{endTime}>=User_Time
            </if>
            <if test="userPhone != null and userPhone !=''">
                and User_Phone=#{userPhone}
            </if>
            order by User_Id desc limit #{start},#{end}
        </where>
    </select>

    <!--注册的时候 管理员 查询对应用户个人信息的方法的映射-->
    <select id="GetUser" parameterType="map" resultMap="BaseLoginUser">
        select * from bbt_user where User_Id=#{userId}
    </select>

    <!--第一步 根据筛选的条件查询对应的用户条数-->
    <select id="GetNewUserNumber" parameterType="map" resultType="int">
        select count(1) from bbt_user
        <where>
            <if test="userState != '' and userState != null">
                and User_State=#{userState}
            </if>
            <if test="userName != '' and userName != null">
                and User_Name=#{userName}
            </if>
            <if test="userPhone != '' and userPhone != null">
                and User_Phone=#{userPhone}
            </if>
            <if test="insuranceCompanyId != '' and insuranceCompanyId != null">
                and Insurance_Company_Id=#{insuranceCompanyId}
            </if>
            <if test="startTime != '' and startTime !=null">
                and User_Time>=#{startTime}
            </if>
            <if test="endTime != '' and endTime != null">
                and #{endTime}>=User_Time
            </if>
        </where>
    </select>

    <!--第二步 查询对筛选的数据-->
    <select id="GetNewUser" parameterType="map" resultMap="BaseAdminCheckUser">
        select * from bbt_user
        <where>
            <if test="userState != '' and userState != null">
                and User_State=#{userState}
            </if>
            <if test="userName != '' and userName != null">
                and User_Name=#{userName}
            </if>
            <if test="userPhone != '' and userPhone != null">
                and User_Phone=#{userPhone}
            </if>
            <if test="insuranceCompanyId != '' and insuranceCompanyId != null">
                and Insurance_Company_Id=#{insuranceCompanyId}
            </if>
            <if test="startTime != '' and startTime !=null">
                and User_Time>=#{startTime}
            </if>
            <if test="endTime != '' and endTime != null">
                and #{endTime}>=User_Time
            </if>
        </where>
        order by User_Id desc limit #{start},#{end}
    </select>

    <!--第一步 先修改用户的信息-->
    <update id="updateUser" parameterType="userCheck">
        update bbt_user
        <set>
            <if test="intentionState != null and intentionState != ''">
                Intention_State=#{intentionState},
            </if>
            <if test="testState != null and testState!= ''">
                test_state=#{testState},
            </if>
            <if test="userTietong != null and userTietong != ''">
                user_Tietong=#{userTietong},
            </if>
            <if test="userOrderState != null and userOrderState !=''">
                User_Order_State=#{userOrderState},
            </if>
            <if test="userState != null and userState != ''">
                User_State=#{userState},
            </if>
            <if test="userMemberState != null and userMemberState ==1''">
                User_Member_State=#{userMemberState},
                <if test="userMemberBegin !=null and userMemberBegin != ''">
                    User_ Member_Begin=#{userMemberBegin},
                </if>
                <if test="userMemberFinish != null and userMemberFinish != ''">
                    User_ Member_Finish=#{userMemberFinish},
                </if>
            </if>
        </set>
        where User_Id=#{userId}
    </update>

    <!--第二步 将管理员修改用户信息的记录存起来-->
    <insert id="insertAdminMessage" parameterType="map">
        insert into bbt_admin_message(user_Id, admin_Message_Time, admin_Message_Remark, admin_Id) values (#{userId},#{adminMessageTime},#{adminMessageRemark},#{adminId})
    </insert>

    <!--第一步 先通过管理员的id 将管理员的权限id和管理员的名称查出来-->
    <select id="Admin" parameterType="map" resultMap="BaseAdmin">
        select admin_Role_Id,admin_Name from  bbt_admin where admin_Id=#{adminId}
    </select>

    <!--第二步 将修改的数据存到对应的数据库中去(消费卡申请)-->
    <update id="updateConsume" parameterType="map">
        update bbt_consume
        <set>
            <if test="consumeState!='' and consumeState !=null">
                Consume_State=#{consumeState},
            </if>
            <if test="adminName != '' and adminName != null">
                Admin_Name=#{adminName},
            </if>
        </set>
        where Consume_Id=#{consumeId}
    </update>

    <!--第二步 将修改的数据存到对应的数据库中去(和豆申请)-->
    <update id="updateBeans" parameterType="map">
        update bbt_beans
        <set>
            <if test="beansState != '' and beansState !=null">
                Beans_State=#{beansState},
            </if>
            <if test="adminName != '' and adminName != null">
                Admin_Name=#{adminName},
            </if>
        </set>
        where Beans_Id#{beansId}
    </update>

    <!--第一步 查询总的委托数-->
    <select id="getEntrustCount" resultType="int">
        select count(1) from  bbt_entrust
    </select>

    <!--第二步 查询总的委托人数-->
    <select id="getUserCount" resultType="int">
        select count(1) from bbt_user
    </select>

    <!--第三步 查询当天注册的用户-->
    <select id="getnewUserCount" parameterType="map" resultType="int">
        select count(1) from bbt_user where User_Time>=#{startTime} and #{endTime}>=User_Time
    </select>

    <!--第四步 查询当天发布的委托-->
    <select id="getnewEntrustCount" parameterType="map" resultType="int">
        select count(1) from  bbt_entrust where Entrust_Start_Time>=#{startTime} and #{endTime}>=Entrust_Start_Time
    </select>

    <!--第一步 将用户的信息进行修改-->
    <update id="getLoginCheck" parameterType="map">
        update bbt_user
        <set>
            <if test="testState != '' and testState != null">
                test_state=#{testState},
            </if>
            <if test="userState != '' and userState != null">
                User_State=#{userState},
            </if>
        </set>
        where User_Id=#{userId}
    </update>

    <!--通过管理id查询管理员的所有信息-->
    <select id="GetadminRoleId" parameterType="int" resultMap="BaseAdmin">
        select * from bbt_admin where admin_Id=#{adminId}
    </select>

    <!--超级管理员 查询对应用户信息-->
    <select id="getCheck" parameterType="int" resultMap="BaseResultMap">
        select * from bbt_user where User_Id=#{userId}
    </select>

    <!--第一步 超级管理员修改用户的信息-->
    <update id="putUser" parameterType="map">
        update bbt_user
        <set>
            <if test="testState != null and testState != ''">
                test_state=#{testState},
            </if>
            <if test="userState != null and userState != ''">
                User_State=#{userState},
            </if>
            <if test="userMemberState != null and userMemberState != ''">
                User_Member_State=#{userMemberState},
                <if test="userMemberState ==1">
                    User_ Member_Begin=#{userMemberBegin},User_ Member_Finish=#{userMemberFinish},
                </if>
            </if>
            <if test="userTietong != null and userTietong != ''">
                User_tietong=#{userTietong},
            </if>
            <if test="intentionState != null and intentionState !=''">
                Intention_state=#{intentionState},
            </if>
            <if test="userOrderState != null and userOrderState != ''">
                User_Order_State=#{userOrderState},
            </if>
        </set>
        where User_Id=#{userId}
    </update>

    <!--第一步 管理员 查询所有委托的条数-->
    <select id="getEntrustNumber" resultType="int">
        select count(1) from bbt_entrust
    </select>

    <!--第二步 管理员 查询对应的委托数据-->
    <select id="getEntrust" parameterType="map" resultMap="BaseAdminEntrust">
        SELECT u.User_Name,u.User_Phone,ic.Insurance_Company_Name,e.license_Plate_Number,e.Entrust_Money,e.Entrust_Start_Time,u.User_Id,e.Entrust_Id FROM bbt_entrust e LEFT JOIN bbt_user u ON u.User_Id=e.User_Id LEFT JOIN bbt_insurance_company ic ON ic.Insurance_Company_Id=e.Insurance_Company_Id ORDER BY e.Entrust_Start_Time DESC limit #{start},#{end}
    </select>

    <!--管理员 查询委托对应的信息-->
    <select id="getEntrustId" parameterType="map" resultMap="BaseParticularsEntrust">
        SELECT u.User_Id,e.Entrust_Id,u.User_Name,e.New_User_Id,e.Finally_User_Id,u.Insurance_Company_Name,e.license_Plate_Number,ic.Insurance_Company_Name as new_Insurance_Company_Name,e.Entrust_Address,e.Entrust_Car_Brand,e.Entrust_State,e.Entrust_Start_Time,e.Entrust_Money,e.Entrust_Service_Charge,e.Entrust_Return_Money,e.Entrust_Return_Time,e.Entrust_Remark,e.Entrust_Insure FROM bbt_entrust e LEFT JOIN bbt_user u ON u.User_Id=e.User_Id LEFT JOIN bbt_insurance_company ic ON ic.Insurance_Company_Id=e.Insurance_Company_Id where e.Entrust_Id=#{entrustId}
    </select>

    <!--管理员 查询自己的信息-->
    <select id="getAdminParticulars" parameterType="map" resultMap="BaseAdmin">
        select * from  bbt_admin where  admin_Id=#{adminId}
    </select>

    <!--管理员修改信息 第一步 根据管理员的id查询管理员对应id-->
    <select id="getadminPassword" parameterType="map" resultType="string">
        select admin_Password from  bbt_admin where admin_Id=#{adminId}
    </select>

    <!--管理员修改信息 第二步 修改对应的信息-->
    <update id="putAdminParticulars" parameterType="map">
        update bbt_admin
        <set>
            <if test="adminName != null and adminName != ''">
                admin_Name=#{adminName},
            </if>
            <if test="adminPhone != null and adminPhone != ''">
                admin_Phone=#{adminPhone},
            </if>
            <if test="adminPassword != null and adminPassword != ''">
                admin_Password=#{adminPassword},
            </if>
            <if test="adminAccount != null and adminAccount != ''">
                admin_Account=#{adminAccount},
            </if>
            <if test="adminPassword != null and adminPassword != ''">
                admin_Password=#{adminPassword},
            </if>
        </set>
        where admin_Id=#{adminId}
    </update>

    <!--超级管理员 管理管理员 第一步 先查询总的条数-->
    <select id="getAdministrationCount" parameterType="map" resultType="int">
        select count(1) from bbt_admin
        <where>
            <if test="adminName != null and adminName != ''">
                and admin_Name=#{adminName}
            </if>
            <if test="adminPhone != null and adminPhone != ''">
                and admin_Phone=#{adminPhone}
            </if>
            <if test="adminAccount != null and adminAccount != ''">
                and admin_Account=#{adminAccount}
            </if>
        </where>
    </select>

    <!--超级管理员 管理管理员 第二步  查询对应的数据-->
    <select id="getAdministration" parameterType="map" resultMap="BaseAdmin">
        select * from bbt_admin
        <where>
            <if test="adminName != null and adminName != ''">
                and admin_Name=#{adminName}
            </if>
            <if test="adminPhone != null and adminPhone != ''">
                and admin_Phone=#{adminPhone}
            </if>
            <if test="adminAccount != null and adminAccount != ''">
                and admin_Account=#{adminAccount}
            </if>
        </where>
        order by admin_Role_Id asc limit #{start},#{end}
    </select>

    <!--超级管理员 查询对应的管理员的id-->
    <select id="getAdministratorMessage" parameterType="map" resultMap="BaseAdmin">
        select * from bbt_admin where admin_Id=#{adminId}
    </select>

    <!--第一步 超级管理员 修改对应的管理员信息-->
    <update id="putAdministratorMessage" parameterType="map">
        update bbt_admin
        <set>
            <if test="adminName != null and adminName != ''">
                admin_Name=#{adminName},
            </if>
            <if test="adminPhone != null and adminPhone !=''">
                admin_Phone=#{adminPhone},
            </if>
            <if test="adminAccount != null and adminAccount !=''">
                admin_Account=#{adminAccount},
            </if>
            <if test="adminPassword != null and adminPassword !=''">
                admin_Password=#{adminPassword},
            </if>
            <if test="adminRoleId != null and adminRoleId !=''">
                admin_Role_Id=#{adminRoleId},
            </if>
            <if test="adminState != null and adminState != ''">
                admin_State=#{adminState},
            </if>
        </set>
        where admin_Id=#{newAdminId}
    </update>

    <!--第二步 将管理员修改用户信息的记录存起来-->
    <insert id="newInsertAdminMessage" parameterType="map">
        insert into bbt_admin_message(user_Id, admin_Message_Time, admin_Message_Remark, admin_Id) values (#{newAdminId},#{adminMessageTime},#{adminMessageRemark},#{adminId})
    </insert>

    <!--第一步 将注册的管理员信息存到数据库-->
    <insert id="postAdmin" parameterType="map">
        insert into bbt_admin(admin_Name, admin_Phone, admin_Account, admin_Password, admin_Role_Id, admin_Role_Name)values(#{adminName},#{adminPhone},#{adminAccount},#{adminPassword},#{adminRoleId},#{adminRoleName})
    </insert>

    <!--第二步 查询最新注册的管理员-->
    <select id="selectAdminId" resultType="int">
        select admin_Id from bbt_admin order by admin_Id desc limit 0,1
    </select>

    <!--第一步 判断管理员的账号和密码是否正确-->
    <select id="getAdminLogin" parameterType="map" resultType="int">
        select count(1) from bbt_admin where admin_Account=#{adminAccount} and admin_Password=#{adminPassword}
    </select>

    <!--第二步 查询管理员对应的信息-->
    <select id="getAdmin" parameterType="map" resultMap="BaseAdmin">
        select * from bbt_admin where  admin_Account=#{adminAccount} and admin_Password=#{adminPassword}
    </select>

    <!--查询对应的管理员的权限-->
    <select id="getAdminRole" resultMap="BaseAdminRelo">
        select * from bbt_admin_role
    </select>

    <!--查询对应的委托 第一步 先查询总的条数-->
    <select id="getScreenEntrustNumber" parameterType="map" resultType="int">
        select count(1) from bbt_user u left join bbt_entrust e on u.User_Id=e.User_Id left join bbt_insurance_company
        ic on e.Insurance_Company_Id=ic.Insurance_Company_Id
        <where>
            <if test="entrustState != null and entrustState != ''">
                and e.Entrust_State=#{entrustState}
            </if>
            <if test="insuranceCompanyId != null and insuranceCompanyId != ''">
                and e.Insurance_Company_Id=#{insuranceCompanyId}
            </if>
            <if test="licensePlateNumber != null and licensePlateNumber != ''">
                and e.license_Plate_Number=#{licensePlateNumber}
            </if>
            <if test="userPhone != null and userPhone != ''">
                and u.User_Phone=#{userPhone}
            </if>
            <if test="startTime != null and startTime != ''">
                and e.Entrust_Start_Time>=#{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and #{endTime}>=e.Entrust_Start_Time
            </if>
        </where>
    </select>

    <!--查询对应的委托 第二步 根据对应的条件查询的对应的委托-->
    <select id="getScreenEntrust" parameterType="map" resultMap="BaseAdminEntrust">
        SELECT
        u.User_Name,u.User_Phone,ic.Insurance_Company_Name,e.license_Plate_Number,e.Entrust_Money,e.Entrust_Start_Time,u.User_Id,e.Entrust_Id
        from bbt_user u left join bbt_entrust e on u.User_Id=e.User_Id left join bbt_insurance_company
        ic on e.Insurance_Company_Id=ic.Insurance_Company_Id
        <where>
            <if test="entrustState != null and entrustState != ''">
                and e.Entrust_State=#{entrustState}
            </if>
            <if test="insuranceCompanyId != null and insuranceCompanyId != ''">
                and e.Insurance_Company_Id=#{insuranceCompanyId}
            </if>
            <if test="licensePlateNumber != null and licensePlateNumber != ''">
                and e.license_Plate_Number=#{licensePlateNumber}
            </if>
            <if test="userPhone != null and userPhone != ''">
                and u.User_Phone=#{userPhone}
            </if>
            <if test="startTime != null and startTime != ''">
                and e.Entrust_Start_Time>=#{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and #{endTime}>=e.Entrust_Start_Time
            </if>
        </where>
        limit #{start},#{end}
    </select>

    <!--第一步 查询对应状态的消费卡条数-->
    <select id="getAllConsumeNumber" parameterType="map" resultType="int">
        select count(1) from bbt_consume where Consume_State=#{consumeState}
    </select>

    <!--第二步 查询对应状态的消费卡数据-->
    <select id="getAllConsume" parameterType="map" resultMap="BaseAllConsume">
        select c.*,u.User_Name from bbt_consume c  left join bbt_user u on c.User_id=u.User_Id where c.Consume_State=#{consumeState}
    </select>

    <!--第一步 查询对应状态的和豆申请-->
    <select id="getAllBeansNumber" parameterType="map" resultType="int">
        select count(1) from bbt_beans where Beans_State=#{beansState}
    </select>

    <select id="getALLBeans" parameterType="map" resultMap="BaseResultMap">
        select b.*,u.User_Name from bbt_beans b left join bbt_user u on b.User_id=u.User_Id where b.Beans_State#{beansState}
    </select>
</mapper>